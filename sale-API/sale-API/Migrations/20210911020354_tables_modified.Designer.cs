// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sale_API.Models;

namespace sale_API.Migrations
{
    [DbContext(typeof(SalesDBContext))]
    [Migration("20210911020354_tables_modified")]
    partial class tables_modified
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("sale_API.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("C_Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_Address3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_Suburb")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("sale_API.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("I_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("I_Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("I_Num")
                        .HasColumnType("int");

                    b.Property<int>("I_RefNum")
                        .HasColumnType("int");

                    b.HasKey("InvoiceID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("sale_API.Models.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("I_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("I_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("I_Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("I_Price")
                        .HasColumnType("int");

                    b.Property<int>("I_Tax")
                        .HasColumnType("int");

                    b.HasKey("ItemID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("sale_API.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InvoiceID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("O_ExclAmount")
                        .HasColumnType("int");

                    b.Property<int>("O_InclAmount")
                        .HasColumnType("int");

                    b.Property<int>("O_TaxAmount")
                        .HasColumnType("int");

                    b.Property<int>("O_qty")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("InvoiceID");

                    b.ToTable("Ordders");
                });

            modelBuilder.Entity("sale_API.Models.Invoice", b =>
                {
                    b.HasOne("sale_API.Models.Customer", null)
                        .WithMany("invoices")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("sale_API.Models.Order", b =>
                {
                    b.HasOne("sale_API.Models.Invoice", null)
                        .WithMany("Orders")
                        .HasForeignKey("InvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
